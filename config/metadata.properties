#
# Copyright (C) 2020-2022, K2N.IO.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
#

############################################################
# This metadata configuration file path can be passed to T2B agent over system property 't2b.metadata.cfg.path', e.g.:
# '-Dt2b.metadata.cfg.path=config/metadata.properties'.
#
# Metadata scopes (property name prefix):
#       "class." - for class metadata
#       "method." (can be omitted) - for method metadata
# Static value definition: key=value
# Variable value definition:
#       key=${variable}                                - to define single variable
#       key=${variable1}:${variable2}:{defaultValue}   - to define multiple variables. variables resolution stops on
#                                                        first resolved variable value, or defined default value
#                                                        (optional, **NOTE** - it has no "$" symbol before "{")
# Default unresolved variable value is "-".
# Metadata value can combine both static and variable content like: Method ${method.name} benchmark
############################################################
# JVM ENVIRONMENT scope variables
############################################################
# "sys#<propName>"   - JVM system property value
#     JVM system properties set by T2B at runtime:
#         "t2b.session.id"   - T2B runtime session identifier          - UUID string
#         "t2b.session.time" - T2B runtime session start date and time - string formatted as "yyyy-MM-dd_HHmmss"
# "env#<varName>"    - OS environment variable value
# "vm#<varName>"     - JVM calculated variable value
#     "time.millis"   - current time in milliseconds (timestamp)
#     "time.nanos"    - current time in nanoseconds
#     "uuid"          - random UUID
#     "random"        - random integer number ranging 0-10000
############################################################
# PACKAGE scope variables   **NOTE** - all package scope values (except "package.name") are available only when
#                                      "META-INF/MANIFEST.MF" file is loaded by class loader!
############################################################
# "package.name"           - package name
# "package.version"        - package implementation version
# "package.title"          - package implementation title
# "package.vendor"         - package implementation vendor
# "package.spec.version"   - package specification version
# "package.spec.title"     - package specification title
# "package.spec.vendor"    - package specification vendor
############################################################
# CLASS scope variables
############################################################
# "class.name"             - class name
# "class.qualified.name"   - class qualified name
# "class.package"          - class package name
# "class.super"            - class superclass qualified name
############################################################
# METHOD scope variables
############################################################
# "method.name"             - method name
# "method.signature"        - method signature
# "method.class"            - method declaring class qualified name
# "method.return.type"      - method return type
# "method.qualified.name"   - method qualified name
# "method.parameters"       - method parameters list
############################################################

# Method metadata
### Benchmarking session id
method.session=${sys#t2b.session.id}
### Common method attributes
method.api=${package.name}
method.libVersion=${package.version}:${sys#t2b.project.version}
#method.libSymbolicName=libSymbolicName
#method.libDescription=libDescription
#method.libVendor=libVendor
#method.libUrl=libUrl
#method.title=title
method.name=${method.name}
method.signature=${method.signature}
### Defines original API method name
method.apiMethodName=${method.qualified.name}

# Class metadata
#class.domain=class domain
#class.context=class context
#class.actionName=class actionName
#class.version=class version
#class.description=class description
#class.isLibraryBenchmark=false